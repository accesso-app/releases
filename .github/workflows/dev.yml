name: Dev CI

on:
  push:
    branches:
      - master
    paths:
      - "docker-compose.yaml"
      - "dev.yaml"
      - ".github/workflows/dev.yml"
      - "facade/*"
  repository_dispatch:
    types:
      - deploy-dev
  workflow_dispatch:

jobs:
  build-facade:
    name: Build facade image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Detect facade changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          list-files: none
          filters: |
            facade:
              - 'facade/**'

      - name: Publish Docker Image
        if: steps.changes.outputs.facade == 'true'
        uses: sergeysova/docker-publish-action@v1
        with:
          image: accesso-app/releases/facade
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: facade/Dockerfile
          tag_semver: skip
          tag_separator: "@"
          semver_higher: true

  deploy:
    name: Deploy
    runs-on: [self-hosted, dev]
    needs: build-facade

    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub Deployment
        id: deployment
        with:
          token: '${{ github.token }}'
          environment: development

      - uses: sergeysova/deployment-status@releases/v1.1
        name: Deployment progress
        with:
          token: '${{ github.token }}'
          state: in_progress
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Checkout release
        working-directory: ~/accesso-releases
        run: |
          git reset --hard HEAD
          git clean -f
          git fetch -p
          git checkout ${{ github.sha }}

      - name: Docker compose
        working-directory: ~/accesso-releases
        run: |
          docker login docker.pkg.github.com --username ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          export POSTGRES_DB="${{ secrets.DEV_DB }}"
          export POSTGRES_USER="${{ secrets.DEV_DB_USER }}"
          export POSTGRES_PASSWORD="${{ secrets.DEV_DB_PASSWORD }}"
          export SENDGRID_API_KEY="${{ secrets.DEV_SENDGRID_API_KEY }}"
          docker-compose -f docker-compose.yaml -f dev.yaml pull
          docker-compose -f docker-compose.yaml -f dev.yaml build
          docker-compose -f docker-compose.yaml -f dev.yaml up -d --remove-orphans

      - uses: sergeysova/deployment-status@releases/v1.1
        name: Deployment success
        if: success()
        with:
          token: '${{ github.token }}'
          environment_url: https://accesso.sova.dev
          state: success
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - uses: sergeysova/deployment-status@releases/v1.1
        name: Deployment failure
        if: failure()
        with:
          token: '${{ github.token }}'
          state: failure
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
