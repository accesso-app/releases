name: Dev CI

on:
  push:
    branches:
      - master
      - feature/monitoring
    paths:
      - "docker-compose.yaml"
      - "dev.yaml"
      - ".github/workflows/dev.yml"
      - "services/traefik/traefik.yml"
      - "services/traefik/config.yaml"
  repository_dispatch:
    types:
      - deploy-dev
  workflow_dispatch:

jobs:
  deploy:
    env:
      DOMAIN_NAME: 'accesso.sova.dev'
    name: Deploy
    runs-on: [self-hosted, dev]

    defaults:
      run:
        working-directory: /home/www/accesso-releases

    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub Deployment
        id: deployment
        with:
          token: '${{ github.token }}'
          environment: development

      - uses: sergeysova/deployment-status@releases/v1.1
        name: Deployment progress
        with:
          token: '${{ github.token }}'
          state: in_progress
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Checkout release
        run: |
          git reset --hard HEAD
          git clean -f
          git fetch -p
          git checkout ${{ github.sha }}

      - name: Docker compose
        run: |
          docker login --username ${{ secrets.DOCKER_HUB_LOGIN }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker login docker.pkg.github.com --username ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker network inspect logging >/dev/null 2>&1 || docker network create --driver=bridge --subnet=172.18.0.0/16 --gateway 172.18.0.1 logging
          docker plugin inspect loki >/dev/null 2>&1 || docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions
          export POSTGRES_DB="${{ secrets.DEV_DB }}"
          export POSTGRES_USER="${{ secrets.DEV_DB_USER }}"
          export POSTGRES_PASSWORD="${{ secrets.DEV_DB_PASSWORD }}"
          export SENDGRID_API_KEY="${{ secrets.DEV_SENDGRID_API_KEY }}"
          export DOMAIN_NAME="${{ env.DOMAIN_NAME }}"
          docker-compose -f docker-compose.yaml -f dev.yaml pull
          docker-compose -f docker-compose.yaml -f dev.yaml build
          docker-compose -f docker-compose.yaml -f dev.yaml up -d --remove-orphans

      - uses: sergeysova/deployment-status@releases/v1.1
        name: Deployment success
        if: success()
        with:
          token: '${{ github.token }}'
          environment_url: https://accesso.sova.dev
          state: success
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - uses: sergeysova/deployment-status@releases/v1.1
        name: Deployment failure
        if: failure()
        with:
          token: '${{ github.token }}'
          state: failure
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
