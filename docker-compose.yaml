version: "3.7"

volumes:
  postgres-storage:
    driver: local
    driver_opts:
      type: none
      device: "${PWD}/data/postgres"
      o: bind
  grafana-storage:

networks:
  accesso:

services:
  vector:
    image: timberio/vector:latest-debian
    hostname: vector
    depends_on:
      - tempo
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./services/vector/vector.toml:/etc/vector/vector.toml
    networks:
      accesso:

  loki:
    image: grafana/loki:latest
    hostname: loki
    expose:
      - "3100"
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    networks:
      accesso:

  acme-permissions:
    image: busybox:1.31.1
    command: ["sh", "-c", "chmod 0600 /data/acme.json"]
    volumes:
      - ./tls/acme.json:/data/acme.json:rw

  traefik:
    hostname: traefik
    image: traefik:v2.4
    depends_on:
      - acme-permissions
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.entrypoints: web
      traefik.http.routers.traefik.rule: "Host(`traefik.${DOMAIN_NAME}`)"
      traefik.http.routers.traefik-secure.entrypoints: websecure
      traefik.http.routers.traefik-secure.rule: "Host(`traefik.${DOMAIN_NAME}`)"
      traefik.http.routers.traefik-secure.tls: "true"
      traefik.http.routers.traefik-secure.service: "api@internal"
    networks:
      accesso:
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./services/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./services/traefik/config-local.yml:/etc/traefik/config.yml:ro
      - ./tls:/tls
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    command: [ "--config.file=/etc/prometheus.yaml" ]
    volumes:
      - ./services/grafana/prometheus.yaml:/etc/prometheus.yaml
    networks:
      accesso:

  grafana:
    image: grafana/grafana:latest
    labels:
      traefik.enable: "true"
      traefik.http.routers.grafana.rule: "Host(`grafana.${DOMAIN_NAME}`)"
      traefik.http.routers.grafana.tls: "true"
    networks:
      accesso:
    volumes:
    - ./services/grafana/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    - grafana-storage:/var/lib/grafana


  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    expose:
      - "14268"  # jaeger ingest
      - "3100"   # tempo
      - "55680"  # otlp grpc
      - "55681"  # otlp http
      - "9411"   # zipkin
    networks:
      accesso:
    volumes:
      - ./services/grafana/tempo-local.yaml:/etc/tempo.yaml
      - ./data/tempo-data:/tmp/tempo
    restart: "no"

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: [ "--config=/etc/otel-collector.yaml" ]
    expose:
    - "4317"
    - "6831"
    volumes:
      - ./services/otel/otel-collector.yaml:/etc/otel-collector.yaml
    networks:
      accesso:

  database:
    image: postgres:13
    restart: "no"
    volumes:
      - "postgres-storage:/var/lib/postgresql/data"
    networks:
      accesso:
    labels:
      traefik.enable: "false"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"

  migrations:
    image: ghcr.io/accesso-app/backend/migrations:latest
    depends_on:
      - database
    networks:
      accesso:
    environment:
      ACCESSO_DATABASE__DATABASE: ${POSTGRES_DB}
      ACCESSO_DATABASE__HOST: database
      ACCESSO_DATABASE__PASSWORD: ${POSTGRES_PASSWORD}
      ACCESSO_DATABASE__USER: ${POSTGRES_USER}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database/${POSTGRES_DB}

  api-internal:
    image: ghcr.io/accesso-app/backend/api-internal:latest
    expose:
      - "9010"
    depends_on:
      - database
      - migrations
    labels:
      traefik.enable: "true"
      traefik.http.routers.api-internal.rule: "Host(`${DOMAIN_NAME}`) && PathPrefix(`/api/internal`)"
      traefik.http.routers.api-internal.middlewares: "api-internal-stripprefix@file"
      traefik.http.routers.api-internal.tls: "true"
    networks:
      accesso:
    restart: "no"
    environment:
      ACCESSO_DATABASE__DATABASE: ${POSTGRES_DB}
      ACCESSO_DATABASE__HOST: database
      ACCESSO_DATABASE__PASSWORD: ${POSTGRES_PASSWORD}
      ACCESSO_DATABASE__POOL_SIZE: 4
      ACCESSO_DATABASE__USER: ${POSTGRES_USER}
      ACCESSO_MODE: production
      ACCESSO_SENDGRID__API_KEY: ${SENDGRID_API_KEY}
      ACCESSO_SENDGRID__EMAIL_CONFIRM_TEMPLATE: d-eec45c55c0364140bf38172e021c8ea5
      ACCESSO_SENDGRID__SENDER_EMAIL: no-reply@accesso.sova.dev
      ACCESSO_SENDGRID__ENABLED: "false"
      ACCESSO_SERVER__HOST: "0.0.0.0"
      ACCESSO_SERVER__PORT: "9010"
      OPENTELEMETRY_ENDPOINT_URL: "http://otel-collector:4317"
      RUST_LOG: ${RUST_LOG}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database/${POSTGRES_DB}

  api-public:
    image: ghcr.io/accesso-app/backend/api-public:latest
    restart: "no"
    expose:
      - "9015"
    depends_on:
      - database
      - api-internal
      - migrations
    labels:
      traefik.enable: "true"
      traefik.http.routers.api-public.rule: "Host(`api.${DOMAIN_NAME}`) && PathPrefix(`/v0`)"
      traefik.http.routers.api-public.middlewares: "api-public-stripprefix@file"
      traefik.http.routers.api-public.tls: "true"
    networks:
      accesso:
    environment:
      ACCESSO_DATABASE__DATABASE: ${POSTGRES_DB}
      ACCESSO_DATABASE__HOST: database
      ACCESSO_DATABASE__PASSWORD: ${POSTGRES_PASSWORD}
      ACCESSO_DATABASE__POOL_SIZE: 2
      ACCESSO_DATABASE__USER: ${POSTGRES_USER}
      ACCESSO_MODE: production
      ACCESSO_SENDGRID__API_KEY: ${SENDGRID_API_KEY}
      ACCESSO_SENDGRID__EMAIL_CONFIRM_TEMPLATE: d-eec45c55c0364140bf38172e021c8ea5
      ACCESSO_SENDGRID__SENDER_EMAIL: no-reply@accesso.sova.dev
      ACCESSO_SERVER__HOST: "0.0.0.0"
      ACCESSO_SERVER__PORT: "9015"
      OPENTELEMETRY_ENDPOINT_URL: "http://otel-collector:4317"
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database/${POSTGRES_DB}
      RUST_LOG: ${RUST_LOG}

  api-admin:
    image: ghcr.io/accesso-app/backend/api-admin:latest
    restart: "no"
    expose:
      - "9005"
    depends_on:
      - database
      - migrations
    labels:
      traefik.enable: "true"
      traefik.http.routers.api-admin.entrypoints: websecure
      traefik.http.routers.api-admin.rule: "Host(`admin.${DOMAIN_NAME}`) && PathPrefix(`/api`)"
      traefik.http.routers.api-admin.middlewares: "api-admin-stripprefix@file"
      traefik.http.routers.api-admin.tls: "true"
    networks:
      accesso:
    environment:
      ACCESSO_DATABASE__DATABASE: ${POSTGRES_DB}
      ACCESSO_DATABASE__HOST: database
      ACCESSO_DATABASE__PASSWORD: ${POSTGRES_PASSWORD}
      ACCESSO_DATABASE__POOL_SIZE: 2
      ACCESSO_DATABASE__USER: ${POSTGRES_USER}
      ACCESSO_MODE: production
      ACCESSO_SENDGRID__API_KEY: ${SENDGRID_API_KEY}
      ACCESSO_SENDGRID__EMAIL_CONFIRM_TEMPLATE: d-eec45c55c0364140bf38172e021c8ea5
      ACCESSO_SENDGRID__SENDER_EMAIL: no-reply@accesso.sova.dev
      ACCESSO_SERVER__HOST: "0.0.0.0"
      ACCESSO_SERVER__PORT: "9005"
      OPENTELEMETRY_ENDPOINT_URL: "http://otel-collector:4317"
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database/${POSTGRES_DB}
      RUST_LOG: ${RUST_LOG}

  admin:
    image: ghcr.io/accesso-app/admin/frontend:latest
    depends_on:
      - api-admin
      - traefik
    labels:
      traefik.enable: "true"
      traefik.http.routers.admin.entrypoints: web
      traefik.http.routers.admin.rule: "Host(`admin.${DOMAIN_NAME}`)"
      traefik.http.routers.admin-secure.entrypoints: websecure
      traefik.http.routers.admin-secure.tls: "true"
      traefik.http.routers.admin-secure.rule: "Host(`admin.${DOMAIN_NAME}`)"

    expose:
      - "80"
    networks:
      accesso:
    environment:
      PUBLIC_URL: https://admin.accesso.localhost

  frontend:
    image: ghcr.io/accesso-app/frontend/main:latest
    labels:
      traefik.enable: "true"
      traefik.http.routers.frontend.tls: "true"
      traefik.http.routers.frontend.rule: "Host(`${DOMAIN_NAME}`)"
    expose:
      - "3000"
    networks:
      accesso:
    environment:
      PUBLIC_URL: https://accesso.localhost
      IMAGE_URL: https://accesso.localhost/images
      BACKEND_URL: ${BACKEND_URL}
